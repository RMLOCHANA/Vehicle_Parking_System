@model V_Number_Temp
@inject DropDown.ICommon commonDDL
@{
    ViewData["Title"] = "Add Booking  Slot";

    ViewData["VActive"] = "active";

}

<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <h4 class="page-title">@ViewData["Title"]</h4>
        </div>
    </div>
</div>
<!-- end page title -->

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.ReturnURL, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.ReturnURL, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReturnURL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.V_Number, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.V_Number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.V_Number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                       <div class="form-group row">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.DropDownList("Slot", commonDDL.SlotList(), "(Select Avaliable Slot)", htmlAttributes: new { @class = "", id = "cmbGender" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.In_Time, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.In_Time,   new { htmlAttributes = new { id = "xbasic-datepicker", @class = "form-control flatpickr-input active" } })
                            @Html.ValidationMessageFor(model => model.In_Time, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group row">
                        @Html.LabelFor(model => model.Out_Time, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Out_Time, new { htmlAttributes = new { id = "xbasic-datepicker", @class = "form-control flatpickr-input active"  } })
                            @Html.ValidationMessageFor(model => model.Out_Time, "", new { @class = "text-danger" })
                        </div>
                    </div>
                      <div class="form-group row">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.DropDownList("Status", commonDDL.StatusList(), "(Select Status)", htmlAttributes: new { @class = "", id = "cmbGender" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                   
                
                    <div class="form-group row">
                        <div class="col-4">
                        </div>
                        <div class="col-8">
                            <button type="submit" class="btn btn-primary mr-2">Add</button>
                            &nbsp;
                            <a href="@Model.ReturnURL">Cancel</a>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>

}
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script src="~/js/datepicker.js"></script>

    <script>

    </script>

}



